server:
  port: 8082
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/bills
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # create-drop
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      group-id: group_id
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
auto:
  create:
    topics:
      enable: true

security:
  oauth2:
    resource:
      #      jwk:
      #        keySetUri: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_dCI229nTx/.well-known/jwks.json
      userInfoUri: http://localhost:8089/auth/userInfo
    #      tokenInfoUri: http://localhost:8089/auth/tokenInfo
    client:
      clientId: t3mpo80ueani42ktgf2o2crj
feign:
  oauth2:
    enabled: true
aws:
  accessKey: ${AWS_ACCESS_KEY}
  secretKey: ${AWS_SECRET_KEY}
app:
  backofficeUrl: http://localhost:3000
  hash:
    salt: salty
  clients:
    establishment:
      url: http://localhost:8081